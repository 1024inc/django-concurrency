language: python
services:
  - MySQL
  - PostgreSQL
python:
  - 2.7
  - 3.2
env:
  - DJANGO="Django==1.4.5" DBENGINE=mysql
  - DJANGO="Django==1.4.5" DBENGINE=pg

  - DJANGO="Django==1.5.2" DBENGINE=mysql
  - DJANGO="Django==1.5.2" DBENGINE=pg

  - DJANGO="https://www.djangoproject.com/download/1.6b2/tarball/" DBENGINE=pg

install:
  - make install-deps
  - sh -c "if [ '$DBENGINE' = 'pg' ]; then pip install -q psycopg2; fi"
  - sh -c "if [ '$DBENGINE' = 'mysql' ]; then pip install -q MySQL-python; fi"
  - pip install -q $DJANGO
  - python setup.py -q install

script:
  - make coverage

before_install:
  - sh -c "if [ '$DBENGINE' = 'pg' ]; then psql -c 'DROP DATABASE IF EXISTS concurrency;' -U postgres; fi"
  - sh -c "if [ '$DBENGINE' = 'mysql' ]; then mysql -e 'DROP DATABASE IF EXISTS concurrency;'; fi"

before_script:
  - sh -c "if [ '$DBENGINE' = 'pg' ]; then psql -c 'CREATE DATABASE concurrency;' -U postgres; fi"
  - sh -c "if [ '$DBENGINE' = 'mysql' ]; then mysql -e 'create database IF NOT EXISTS concurrency;'; fi"

matrix:
  exclude:
    - python: 3.2
      env: DJANGO="Django==1.4.5" DBENGINE=mysql
    - python: 3.2
      env: DJANGO="Django==1.4.5" DBENGINE=pg
    - python: 3.2
      env: DJANGO="Django==1.5.2" DBENGINE=mysql

after_success:
  - coveralls
